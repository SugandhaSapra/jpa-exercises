1. 3 tables are created
employees,departments,hibernate_sequence

2.        id	bigint(20)	NO	PRI
          name	varchar(255)	YES
          salary	bigint(20)	NO
          department_id	bigint(20)	YES	MUL

3.       id	bigint(20)	NO	PRI
       name	varchar(255)	YES

4.
Data is inserted in Department table & then to Employee table because when we save the child object, hibernate first checks whether its parent object is exist in database or not. If parent object is exist then hibernate inserts only child records. If doesnâ€™t exist hibernate first inserts the parent record and then insert the child records.

    LOGS :

  Employee{id=1, name='Test Employee', salary=100000, department=Department{id=2, name='IT'}}
  09:58:02.951 [main] DEBUG org.hibernate.SQL - insert into departments (name, id) values (?, ?)
  09:58:02.958 [main] DEBUG org.hibernate.SQL - insert into employees (department_id, name, salary, id) values (?, ?, ?, ?)

5.No mapping tables are created because mappedBy attribute is not used.

6.The application failed with an error " org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing"
Since save() and persist() operations related to the entities are removed.

7.Using  @NotNull annotation at private Department department;

8.
            Department department = new Department("IT");
            Employee employee = new Employee();
            employee.setName("John");
            employee.setSalary(100_000);
            employee.setDepartment(department);
            entityManager.persist(employee);
            Employee employee1 = new Employee();
            employee1.setName("Tom");
            employee1.setSalary(100_000);
            employee1.setDepartment(department);
            entityManager.persist(employee1);
            entityManager.getTransaction().commit();

 9.Owning Side - Employee Inverse Side - Department

 10.
 We can use @JoinColumn(name = "dept_id")
private Department department;  to rename the column name.



